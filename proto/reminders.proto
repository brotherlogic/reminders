syntax = "proto3";

package reminders;

option go_package = ".;reminders";

message ReminderConfig {
  ReminderList list = 1;
}

message Reminder {
  string text = 1;

  string server = 11;
  
  // Text day of the week
  string day_of_week = 2;

  // The time this should next be run
  int64 next_run_time = 3;

  // The state the task is in
  enum ReminderState {
    REPEATING = 0;
    ASSIGNED = 1;
    COMPLETE = 2;
    UNASSIGNED = 3;
  }
  ReminderState current_state = 4;

  // Assigned state for a github task
  string github_id = 5;

  // The component this should filed against in la github
  string github_component = 6;

  enum ReminderPeriod {
    WEEKLY = 0;
    MONTHLY = 1;
    YEARLY = 2;
    HALF_YEARLY = 3;
    DAILY = 4;
    BIWEEKLY = 5;
    ONE_OFF = 6;
  }

  ReminderPeriod repeatPeriod = 7;

  int64 uid = 8;

  // For something more freeform
  int64 repeat_period_in_seconds = 9;

  // To enable alert silencing
  repeated string silences = 10;
}

message Empty {}

message ReminderList {
  repeated Reminder reminders = 1;
}


message DeleteRequest {
  int64 uid = 1;
}

message DeleteResponse {
  
}

service Reminders {
  rpc AddReminder(Reminder) returns (Empty) {};
  rpc ListReminders(Empty) returns (ReminderConfig) {};
  rpc DeleteTask(DeleteRequest) returns (DeleteResponse) {};
}

message ReceiveRequest {}
message ReceiveResponse {}

service ReminderReceiver {
  rpc Receive(ReceiveRequest) returns (ReceiveResponse) {};
}